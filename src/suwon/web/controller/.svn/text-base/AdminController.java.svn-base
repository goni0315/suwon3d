package suwon.web.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.ServletRequestUtils;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.mymgr.framework.controller.ResponseUtil;

import suwon.web.Service.AdminService;
import suwon.web.dao.AdminDao;
import suwon.web.vo.LayAutVo;
import suwon.web.vo.LayInfoVo;
import suwon.web.vo.SuwonDongVO;
import util.MyUtil;

@Controller
public class AdminController implements AdminDao{
	private int currentPage = 1;
	private int showPageLimit = 1000; 
	private int startArticleNum = 0;
	private int endArticleNum = 0;
	//설정 바꿔야함 > 나중엔 세션 체크해서 관리자 권한이 있는 사람만 접근 가능하게 해야함 
	private ApplicationContext context = new ClassPathXmlApplicationContext("/config/applicationContext.xml");	
	private AdminService adminService = (AdminService) context.getBean("adminService");
			
	@RequestMapping("/admin.do")
	public ModelAndView goAdminPage(HttpServletRequest request, HttpServletResponse response){
		
			String pUsrid = request.getParameter("adminUsrid");
			
			ModelAndView mav = new ModelAndView("jsp/admin/index");
			
			mav.addObject("usrid", pUsrid);
			
			return mav;		
	}
	@RequestMapping("/admin/layerList.do")
	public ModelAndView getLayerList(HttpServletRequest request, HttpServletResponse response){			
		List<LayInfoVo> list=null;
		 String urlView=null;
		 String cp = request.getContextPath();
		String msg = ServletRequestUtils.getStringParameter(request, "searchLayGroup", null);
		int totalNum = 0;
	    int showArticleLimit = 5;
		int total_page = 0;
		int numPerPage   = 5;
		String pageNum  = ServletRequestUtils.getStringParameter(request, "pageNum",null); //페이지		
		
	    if(pageNum != null && !(pageNum.equals(""))){//페이지 캐스팅
	    	currentPage = Integer.parseInt(pageNum);
	    }else{
	    	currentPage = 1;
	    }

	    // expression article variables value
		startArticleNum = (currentPage - 1) * showArticleLimit + 1; //페이지
		endArticleNum = startArticleNum + showArticleLimit -1;      //페이지
		
		// get boardList and get page html code
		/*System.out.println("pageNum" + pageNum);
		System.out.println("startArticleNum : "+startArticleNum);
		System.out.println("endArticleNum : "+endArticleNum);*/

		
		if(msg==null){
			 list = adminService.getLayerListForAdmin(startArticleNum, endArticleNum);
			 totalNum = adminService.getLayerListCntForAdmin(startArticleNum, endArticleNum);	
			 urlView = cp+"/admin/layerList.do";
		}else{
			list = adminService.getLayerListForAdminInLayerListPage(startArticleNum, endArticleNum,msg);
			totalNum = adminService.getLayerListCntForAdminInLayerListPage(startArticleNum, endArticleNum,msg);	
			 urlView = cp+"/admin/layerList.do?searchLayGroup="+msg;
		}
		//System.out.println("totalNum: "+totalNum);
		List<LayInfoVo> grp_list = adminService.getGroupListForAdmin();
		Map<String, List> returnMap = new HashMap<String, List>();
		returnMap.put("resultList", list);
		returnMap.put("groupList", grp_list);
		

		

		MyUtil myUtil = new MyUtil();
		if(totalNum != 0)   total_page = myUtil.getPageCount(numPerPage,  totalNum) ;
		
	    
	    ModelAndView mav = new ModelAndView("jsp/admin/sub1");
			mav.addObject("resultMap",returnMap);
			mav.addObject("keyWord", msg);
			mav.addObject("totalNum", totalNum);
			mav.addObject("pageIndexList", myUtil.pageIndexList(currentPage, total_page, urlView));
			return mav;		
	}
	@RequestMapping("/admin/layerInfo.do")
	public String getLayerInfoForSeq(HttpServletRequest request, HttpServletResponse response){
		int seq = Integer.parseInt(ServletRequestUtils.getStringParameter(request, "seq","0"));
		LayInfoVo vo = adminService.getLayerInfoForSeq(seq);
		return ResponseUtil.responseJSON(response, vo);
	}	
	
	@RequestMapping("/admin/layerInfoUpdate.do")
	@ResponseBody
	public String doLayerInfoUpdate(HttpServletRequest request, HttpServletResponse response, LayInfoVo paramVo){
		
		String msg= adminService.doLayerInfoUpdate(paramVo);
		return msg;
	}
	
	
}
